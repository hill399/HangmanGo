// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hangmanpb/hangman.proto

package hangmanpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Guess struct {
	GameNumber           int32    `protobuf:"varint,1,opt,name=game_number,json=gameNumber,proto3" json:"game_number,omitempty"`
	GuessLetter          string   `protobuf:"bytes,2,opt,name=guess_letter,json=guessLetter,proto3" json:"guess_letter,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Guess) Reset()         { *m = Guess{} }
func (m *Guess) String() string { return proto.CompactTextString(m) }
func (*Guess) ProtoMessage()    {}
func (*Guess) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6c8bc68c65a2053, []int{0}
}

func (m *Guess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Guess.Unmarshal(m, b)
}
func (m *Guess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Guess.Marshal(b, m, deterministic)
}
func (m *Guess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Guess.Merge(m, src)
}
func (m *Guess) XXX_Size() int {
	return xxx_messageInfo_Guess.Size(m)
}
func (m *Guess) XXX_DiscardUnknown() {
	xxx_messageInfo_Guess.DiscardUnknown(m)
}

var xxx_messageInfo_Guess proto.InternalMessageInfo

func (m *Guess) GetGameNumber() int32 {
	if m != nil {
		return m.GameNumber
	}
	return 0
}

func (m *Guess) GetGuessLetter() string {
	if m != nil {
		return m.GuessLetter
	}
	return ""
}

func (m *Guess) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GuessRequest struct {
	Guess                *Guess   `protobuf:"bytes,1,opt,name=guess,proto3" json:"guess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuessRequest) Reset()         { *m = GuessRequest{} }
func (m *GuessRequest) String() string { return proto.CompactTextString(m) }
func (*GuessRequest) ProtoMessage()    {}
func (*GuessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6c8bc68c65a2053, []int{1}
}

func (m *GuessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuessRequest.Unmarshal(m, b)
}
func (m *GuessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuessRequest.Marshal(b, m, deterministic)
}
func (m *GuessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuessRequest.Merge(m, src)
}
func (m *GuessRequest) XXX_Size() int {
	return xxx_messageInfo_GuessRequest.Size(m)
}
func (m *GuessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GuessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GuessRequest proto.InternalMessageInfo

func (m *GuessRequest) GetGuess() *Guess {
	if m != nil {
		return m.Guess
	}
	return nil
}

type GuessResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Detail               []string `protobuf:"bytes,2,rep,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GuessResponse) Reset()         { *m = GuessResponse{} }
func (m *GuessResponse) String() string { return proto.CompactTextString(m) }
func (*GuessResponse) ProtoMessage()    {}
func (*GuessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6c8bc68c65a2053, []int{2}
}

func (m *GuessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GuessResponse.Unmarshal(m, b)
}
func (m *GuessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GuessResponse.Marshal(b, m, deterministic)
}
func (m *GuessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GuessResponse.Merge(m, src)
}
func (m *GuessResponse) XXX_Size() int {
	return xxx_messageInfo_GuessResponse.Size(m)
}
func (m *GuessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GuessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GuessResponse proto.InternalMessageInfo

func (m *GuessResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *GuessResponse) GetDetail() []string {
	if m != nil {
		return m.Detail
	}
	return nil
}

type NewGameRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewGameRequest) Reset()         { *m = NewGameRequest{} }
func (m *NewGameRequest) String() string { return proto.CompactTextString(m) }
func (*NewGameRequest) ProtoMessage()    {}
func (*NewGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6c8bc68c65a2053, []int{3}
}

func (m *NewGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGameRequest.Unmarshal(m, b)
}
func (m *NewGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGameRequest.Marshal(b, m, deterministic)
}
func (m *NewGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGameRequest.Merge(m, src)
}
func (m *NewGameRequest) XXX_Size() int {
	return xxx_messageInfo_NewGameRequest.Size(m)
}
func (m *NewGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewGameRequest proto.InternalMessageInfo

type NewGameResponse struct {
	GameNumber           int32    `protobuf:"varint,1,opt,name=game_number,json=gameNumber,proto3" json:"game_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewGameResponse) Reset()         { *m = NewGameResponse{} }
func (m *NewGameResponse) String() string { return proto.CompactTextString(m) }
func (*NewGameResponse) ProtoMessage()    {}
func (*NewGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6c8bc68c65a2053, []int{4}
}

func (m *NewGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewGameResponse.Unmarshal(m, b)
}
func (m *NewGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewGameResponse.Marshal(b, m, deterministic)
}
func (m *NewGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewGameResponse.Merge(m, src)
}
func (m *NewGameResponse) XXX_Size() int {
	return xxx_messageInfo_NewGameResponse.Size(m)
}
func (m *NewGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewGameResponse proto.InternalMessageInfo

func (m *NewGameResponse) GetGameNumber() int32 {
	if m != nil {
		return m.GameNumber
	}
	return 0
}

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6c8bc68c65a2053, []int{5}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type ListResponse struct {
	GameDetails          []string `protobuf:"bytes,1,rep,name=game_details,json=gameDetails,proto3" json:"game_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6c8bc68c65a2053, []int{6}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetGameDetails() []string {
	if m != nil {
		return m.GameDetails
	}
	return nil
}

func init() {
	proto.RegisterType((*Guess)(nil), "hangman.Guess")
	proto.RegisterType((*GuessRequest)(nil), "hangman.GuessRequest")
	proto.RegisterType((*GuessResponse)(nil), "hangman.GuessResponse")
	proto.RegisterType((*NewGameRequest)(nil), "hangman.NewGameRequest")
	proto.RegisterType((*NewGameResponse)(nil), "hangman.NewGameResponse")
	proto.RegisterType((*ListRequest)(nil), "hangman.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "hangman.ListResponse")
}

func init() { proto.RegisterFile("hangmanpb/hangman.proto", fileDescriptor_e6c8bc68c65a2053) }

var fileDescriptor_e6c8bc68c65a2053 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcf, 0x4f, 0x32, 0x31,
	0x14, 0xfc, 0x80, 0x0f, 0x70, 0xdf, 0x02, 0x9a, 0x46, 0x60, 0xb3, 0x17, 0xb1, 0xf1, 0xc0, 0x09,
	0xe3, 0xaa, 0x89, 0x27, 0x0f, 0x4a, 0x82, 0x07, 0x42, 0xcc, 0x7a, 0xf3, 0x42, 0x8a, 0xbe, 0xac,
	0x24, 0x74, 0xc1, 0xb6, 0xab, 0xff, 0xbe, 0xe9, 0xcf, 0x28, 0x1e, 0xbc, 0x75, 0xe6, 0x75, 0x66,
	0x3a, 0x2f, 0x85, 0xe1, 0x1b, 0x2b, 0x0b, 0xce, 0xca, 0xdd, 0xea, 0xdc, 0x9d, 0x26, 0x3b, 0xb1,
	0x55, 0x5b, 0xd2, 0x76, 0x90, 0x16, 0xd0, 0x9c, 0x55, 0x28, 0x25, 0x39, 0x81, 0xb8, 0x60, 0x1c,
	0x97, 0x65, 0xc5, 0x57, 0x28, 0x92, 0xda, 0xa8, 0x36, 0x6e, 0xe6, 0xa0, 0xa9, 0x85, 0x61, 0xc8,
	0x29, 0x74, 0x0a, 0x7d, 0x73, 0xb9, 0x41, 0xa5, 0x50, 0x24, 0xf5, 0x51, 0x6d, 0x1c, 0xe5, 0xb1,
	0xe1, 0xe6, 0x86, 0x22, 0x29, 0x1c, 0x54, 0x12, 0x45, 0xc9, 0x38, 0x26, 0x0d, 0x33, 0x0e, 0x98,
	0x5e, 0x41, 0xc7, 0x04, 0xe5, 0xf8, 0x5e, 0xa1, 0x54, 0xe4, 0x0c, 0x9a, 0x46, 0x6a, 0x92, 0xe2,
	0xac, 0x37, 0xf1, 0x0f, 0xb4, 0xb7, 0xec, 0x90, 0xde, 0x43, 0xd7, 0xa9, 0xe4, 0x6e, 0x5b, 0x4a,
	0xd4, 0x11, 0xc2, 0x9d, 0x8d, 0x32, 0xca, 0x03, 0x26, 0x03, 0x68, 0xbd, 0xa2, 0x62, 0xeb, 0x4d,
	0x52, 0x1f, 0x35, 0xc6, 0x51, 0xee, 0x10, 0x3d, 0x82, 0xde, 0x02, 0x3f, 0x67, 0x8c, 0xa3, 0x0b,
	0xa7, 0x19, 0x1c, 0x06, 0xc6, 0x89, 0xff, 0xea, 0x4f, 0xbb, 0x10, 0xcf, 0xd7, 0x52, 0x79, 0x8b,
	0x0b, 0xe8, 0x58, 0xe8, 0xf4, 0x7a, 0x3d, 0x5a, 0x6f, 0x33, 0x75, 0xad, 0x86, 0x59, 0x0f, 0xe3,
	0x38, 0xb5, 0x54, 0xf6, 0xe0, 0x56, 0xf0, 0x84, 0xe2, 0x63, 0xfd, 0x82, 0xe4, 0xc6, 0xef, 0xbe,
	0xbf, 0x57, 0xde, 0x46, 0xa4, 0x83, 0x7d, 0xda, 0x46, 0xd1, 0x7f, 0xd9, 0x63, 0x68, 0xe4, 0xbd,
	0x6e, 0xa1, 0xed, 0x18, 0x32, 0x0c, 0xb2, 0x9f, 0xad, 0xd3, 0xe4, 0xf7, 0x20, 0x38, 0x4e, 0x6d,
	0x3b, 0x6f, 0x77, 0x0d, 0xff, 0x35, 0x24, 0xc7, 0x41, 0xf2, 0xad, 0x7b, 0xda, 0xdf, 0x63, 0xbd,
	0xcb, 0x5d, 0xfc, 0x1c, 0x85, 0x1f, 0xb7, 0x6a, 0x99, 0xaf, 0x76, 0xf9, 0x15, 0x00, 0x00, 0xff,
	0xff, 0x8b, 0xf0, 0x8e, 0x35, 0x85, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GuessServiceClient is the client API for GuessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GuessServiceClient interface {
	Guess(ctx context.Context, in *GuessRequest, opts ...grpc.CallOption) (*GuessResponse, error)
}

type guessServiceClient struct {
	cc *grpc.ClientConn
}

func NewGuessServiceClient(cc *grpc.ClientConn) GuessServiceClient {
	return &guessServiceClient{cc}
}

func (c *guessServiceClient) Guess(ctx context.Context, in *GuessRequest, opts ...grpc.CallOption) (*GuessResponse, error) {
	out := new(GuessResponse)
	err := c.cc.Invoke(ctx, "/hangman.GuessService/Guess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GuessServiceServer is the server API for GuessService service.
type GuessServiceServer interface {
	Guess(context.Context, *GuessRequest) (*GuessResponse, error)
}

// UnimplementedGuessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGuessServiceServer struct {
}

func (*UnimplementedGuessServiceServer) Guess(ctx context.Context, req *GuessRequest) (*GuessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Guess not implemented")
}

func RegisterGuessServiceServer(s *grpc.Server, srv GuessServiceServer) {
	s.RegisterService(&_GuessService_serviceDesc, srv)
}

func _GuessService_Guess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GuessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuessServiceServer).Guess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hangman.GuessService/Guess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuessServiceServer).Guess(ctx, req.(*GuessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GuessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hangman.GuessService",
	HandlerType: (*GuessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Guess",
			Handler:    _GuessService_Guess_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hangmanpb/hangman.proto",
}

// NewGameServiceClient is the client API for NewGameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NewGameServiceClient interface {
	NewGame(ctx context.Context, in *NewGameRequest, opts ...grpc.CallOption) (*NewGameResponse, error)
}

type newGameServiceClient struct {
	cc *grpc.ClientConn
}

func NewNewGameServiceClient(cc *grpc.ClientConn) NewGameServiceClient {
	return &newGameServiceClient{cc}
}

func (c *newGameServiceClient) NewGame(ctx context.Context, in *NewGameRequest, opts ...grpc.CallOption) (*NewGameResponse, error) {
	out := new(NewGameResponse)
	err := c.cc.Invoke(ctx, "/hangman.NewGameService/NewGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NewGameServiceServer is the server API for NewGameService service.
type NewGameServiceServer interface {
	NewGame(context.Context, *NewGameRequest) (*NewGameResponse, error)
}

// UnimplementedNewGameServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNewGameServiceServer struct {
}

func (*UnimplementedNewGameServiceServer) NewGame(ctx context.Context, req *NewGameRequest) (*NewGameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewGame not implemented")
}

func RegisterNewGameServiceServer(s *grpc.Server, srv NewGameServiceServer) {
	s.RegisterService(&_NewGameService_serviceDesc, srv)
}

func _NewGameService_NewGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NewGameServiceServer).NewGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hangman.NewGameService/NewGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NewGameServiceServer).NewGame(ctx, req.(*NewGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NewGameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hangman.NewGameService",
	HandlerType: (*NewGameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewGame",
			Handler:    _NewGameService_NewGame_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hangmanpb/hangman.proto",
}

// ListServiceClient is the client API for ListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ListServiceClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type listServiceClient struct {
	cc *grpc.ClientConn
}

func NewListServiceClient(cc *grpc.ClientConn) ListServiceClient {
	return &listServiceClient{cc}
}

func (c *listServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/hangman.ListService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ListServiceServer is the server API for ListService service.
type ListServiceServer interface {
	List(context.Context, *ListRequest) (*ListResponse, error)
}

// UnimplementedListServiceServer can be embedded to have forward compatible implementations.
type UnimplementedListServiceServer struct {
}

func (*UnimplementedListServiceServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterListServiceServer(s *grpc.Server, srv ListServiceServer) {
	s.RegisterService(&_ListService_serviceDesc, srv)
}

func _ListService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hangman.ListService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ListService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hangman.ListService",
	HandlerType: (*ListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _ListService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hangmanpb/hangman.proto",
}
